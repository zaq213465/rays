<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo" 
	xmlns:p="http://www.springframework.org/schema/p"
	
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd"
	default-lazy-init="true">

	<description>Spring Configuration</description>
	
    <!-- 加载配置属性文件 -->
	<!-- <context:property-placeholder ignore-unresolvable="true" location="classpath:/application.properties" /> -->
	<!-- 加载zk之外的配置，优先级最高 -->
	<bean id="propConfigurer"
		class="com.epay.commons.configuration.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="order" value="1" />
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath*:/application-epay.properties</value>
				<!-- 服务器生产环境配置 -->
				<value>file:d:/application-epay.properties</value>
				<value>file:/projects/hfscancode/app/scancode/conf/application-epay.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- <bean id="zkPropConfigurer" class="com.epay.commons.configuration.ZookeeperConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="order" value="2" />
		<property name="location">
			<bean class="com.epay.commons.configuration.ZookeeperResource" >
				 <constructor-arg>
			        <list>
						标准配置
						<value>classpath*:/application-epay.properties</value>
						服务器生产环境配置
						<value>file:d:/application-epay.properties</value>
						<value>file:./application-epay.properties</value>
						<value>file:/app/public/config/application-epay.properties</value>
					</list>
			    </constructor-arg>   
			</bean>
		</property>
	</bean>   -->
	
	<!-- ================================================================================== -->
	<!-- 图片路径初始化 -->
	<!-- ================================================================================== -->
	<bean id="fileUploadConfig" class="com.epay.scancode.service.commons.FileUploadConfig" 
		p:path="${epay.fileupload.root}" 
		p:filePath="${epay.filepath.root}" 
		p:qrcodePath="${epay.qrcodePath.root}"
		p:viralPath="${epay.viralPath.root}"
		p:qrPath="${epay.qrPath.root}"
		p:agentQrPath="${epay.agent.qrPath}">
	</bean>
	
	<!-- 使用Annotation自动注册Bean，解决事物失效问题：在主容器中不扫描@Controller注解，在SpringMvc中只扫描@Controller注解。  -->
	<context:component-scan base-package="com.epay"/><!-- base-package 如果多个，用“,”分隔 -->
	
	<!-- ================================================================================== -->
	<!-- 配置redis缓存管理器 -->
	<!-- ================================================================================== -->
	<bean id="redisSharedCache" class="com.epay.cache.jedis.impl.RedisSharedCache">
		<property name="hostName" value="${redis.hostName}" />
		<property name="port" value="${redis.port}" />
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>
	
	<!-- ================================================================================== -->
	<!-- 配置短信 -->
	<!-- ================================================================================== -->
	<bean id="smsService" class="com.epay.common.sms.services.impl.XieheSmsServiceImpl"></bean>
	
	
	<bean class="com.epay.commons.utils.Springs" lazy-init="false"></bean>


	<!-- 配置 JSR303 Bean Validator 定义 -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
    
	
	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 定义事务 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" />
			<tx:method name="create*" propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false" />
			<tx:method name="import*" propagation="REQUIRED" read-only="false" />
			<tx:method name="move*" propagation="REQUIRED" read-only="false" />
			<tx:method name="do*" propagation="REQUIRED" read-only="false" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="export*" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>

	<!-- AOP配置 -->
	<aop:config>
		<aop:pointcut id="serviceCuts" expression="execution(* com.epay..*ServiceImpl.*(..))" />  
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceCuts" />
	</aop:config>
	
	<bean id="passwordCallback" class="com.epay.commons.utils.JdbcPasswordCallback">
		<property name="password" value="${epay.jdbc.password}" />
	</bean>
		
	<!-- Production 环境 -->
 	<beans profile="production">
 	    <!-- 数据源配置, 使用 BoneCP 数据库连接池 -->
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
		    <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
		    <property name="driverClassName" value="${epay.jdbc.driver}" />
		    
			<!-- 基本属性 url、user、password -->
			<property name="url" value="${epay.jdbc.url}" />
			<property name="username" value="${epay.jdbc.username}" />
			<!--<property name="password" value="${clm.user.jdbc.password}" />-->
			
			<!-- 配置初始化大小、最小、最大 -->
			<property name="initialSize" value="${epay.pool.minIdle}" />
			<property name="minIdle" value="${epay.pool.minIdle}" /> 
			<property name="maxActive" value="${epay.pool.maxActive}" />
			
			<!-- 配置获取连接等待超时的时间 -->
			<property name="maxWait" value="60000" />
			
			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="60000" />
			
			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="300000" />
			
			<property name="validationQuery" value="SELECT 'x' from dual" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" />
			
			<!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用）
			<property name="poolPreparedStatements" value="true" />
			<property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->
			
			<!-- 配置监控统计拦截的filters -->
		    <property name="filters" value="stat" /> 
		    
		    <property name="passwordCallback" ref="passwordCallback"/>
		</bean>
	
		<!-- MyBatis配置 -->
		<bean id="sqlSessionFactory"
			class="com.epay.commons.mybatis.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="configLocation" value="classpath:mybatis-config-mysql.xml" />
			<!--  需要从jar中加载GlobalMapper.xml -->
			<property name="mapperLocations">
	            <list>
	                <value>classpath*:/com/epay/**/mysql/*Mapper.xml</value>
	                <value>classpath*:/GlobalMapper.xml</value>
	            </list>
        	</property>
		</bean>
    </beans>
	
</beans>